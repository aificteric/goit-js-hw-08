{"mappings":";;AACA,IAAMA,EAAOC,SAASC,cAAc,kBAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAeJ,EAAKE,cAAc,4BAGlCG,EAAa,sBAiCbC,EAA8BC,UA9BT,WACzB,IAAMC,EAAoB,CACxBC,MAAON,EAAWO,MAClBC,QAASP,EAAaM,OAExBE,aAAaC,QAAQR,EAAYS,KAAKC,UAAUP,G,GAyBe,KAGjER,EAAKgB,iBAAiB,SAAS,WAC7BV,G,IAIFW,OAAOD,iBAAiB,QAAQ,WA7BP,IACjBR,KAAoBM,KAAKI,MAAMN,aAAaO,QAAQd,OAExDF,EAAWO,MAAQF,EAAkBC,OAAS,GAC9CL,EAAaM,MAAQF,EAAkBG,SAAW,G,IA8BtDX,EAAKgB,iBAAiB,UAAU,SAAAI,GAC9BA,EAAMC,iBArBNT,aAAaU,WAAWjB,GACxBF,EAAWO,MAAQ,GACnBN,EAAaM,MAAQ,GACrBa,QAAQC,IAPkB,CACxBf,MAAO,GACPE,QAAS,I","sources":["src/js/03-feedback.js"],"sourcesContent":["//! Selecting form and input fields\nconst form = document.querySelector('.feedback-form');\nconst emailInput = form.querySelector('input[name=\"email\"]');\nconst messageInput = form.querySelector('textarea[name=\"message\"]');\n\n//! Seting key for local storage due to the task requirements\nconst storageKey = 'feedback-form-state';\n\n//* Saving form input values to local storage\nconst saveToLocalStorage = () => {\n  const feedbackFormState = {\n    email: emailInput.value,\n    message: messageInput.value,\n  };\n  localStorage.setItem(storageKey, JSON.stringify(feedbackFormState));\n};\n\n//* Updating form fields with values from local storage\nconst updateFormFields = () => {\n  const feedbackFormState = JSON.parse(localStorage.getItem(storageKey));\n  if (feedbackFormState) {\n    emailInput.value = feedbackFormState.email || '';\n    messageInput.value = feedbackFormState.message || '';\n  }\n};\n\n//! Clearing form and local storage\nconst clearFormAndLocalStorage = () => {\n  const feedbackFormState = {\n    email: '',\n    message: '',\n  };\n  localStorage.removeItem(storageKey);\n  emailInput.value = '';\n  messageInput.value = '';\n  console.log(feedbackFormState);\n};\n\n//* Save form input values to local storage using lodash throttle\nconst throttledSaveToLocalStorage = throttle(saveToLocalStorage, 500);\n\n// Add event listener to form inputs\nform.addEventListener('input', () => {\n  throttledSaveToLocalStorage();\n});\n\n// Update form fields with values from local storage on page load\nwindow.addEventListener('load', () => {\n  updateFormFields();\n});\n\n// Prevent default form submit behavior and clear form and local storage\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  clearFormAndLocalStorage();\n});\n"],"names":["$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$emailInput","$b00c40859be242c5$var$messageInput","$b00c40859be242c5$var$storageKey","$b00c40859be242c5$var$throttledSaveToLocalStorage","throttle","feedbackFormState","email","value","message","localStorage","setItem","JSON","stringify","addEventListener","window","parse","getItem","event","preventDefault","removeItem","console","log"],"version":3,"file":"03-feedback.f54570e4.js.map"}