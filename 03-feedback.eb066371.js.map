{"mappings":";AACA,MAAMA,EAAOC,SAASC,cAAc,kBAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAeJ,EAAKE,cAAc,4BAoClCG,EAA8BC,UA9BT,KACzB,MAAMC,EAAoB,CACxBC,MAAOL,EAAWM,MAClBC,QAASN,EAAaK,OAExBE,aAAaC,QARI,sBAQgBC,KAAKC,UAAUP,GAAmB,GAyBJ,KAGjEP,EAAKe,iBAAiB,SAAS,KAC7BV,GAA6B,IAI/BW,OAAOD,iBAAiB,QAAQ,KA7BP,MACvB,MAAMR,EAAoBM,KAAKI,MAAMN,aAAaO,QAbjC,wBAcbX,IACFJ,EAAWM,MAAQF,EAAkBC,OAAS,GAC9CJ,EAAaK,MAAQF,EAAkBG,SAAW,G,EA0BpDS,EAAkB,IAIpBnB,EAAKe,iBAAiB,UAAUK,IAC9BA,EAAMC,iBArBNV,aAAaW,WA1BI,uBA2BjBnB,EAAWM,MAAQ,GACnBL,EAAaK,MAAQ,GACrBc,QAAQC,IAPkB,CACxBhB,MAAO,GACPE,QAAS,IAwBe","sources":["src/js/03-feedback.js"],"sourcesContent":["//! Selecting form and input fields\nconst form = document.querySelector('.feedback-form');\nconst emailInput = form.querySelector('input[name=\"email\"]');\nconst messageInput = form.querySelector('textarea[name=\"message\"]');\n\n//! Seting key for local storage due to the task requirements\nconst storageKey = 'feedback-form-state';\n\n//* Saving form input values to local storage\nconst saveToLocalStorage = () => {\n  const feedbackFormState = {\n    email: emailInput.value,\n    message: messageInput.value,\n  };\n  localStorage.setItem(storageKey, JSON.stringify(feedbackFormState));\n};\n\n//* Updating form fields with values from local storage\nconst updateFormFields = () => {\n  const feedbackFormState = JSON.parse(localStorage.getItem(storageKey));\n  if (feedbackFormState) {\n    emailInput.value = feedbackFormState.email || '';\n    messageInput.value = feedbackFormState.message || '';\n  }\n};\n\n//! Clearing form and local storage\nconst clearFormAndLocalStorage = () => {\n  const feedbackFormState = {\n    email: '',\n    message: '',\n  };\n  localStorage.removeItem(storageKey);\n  emailInput.value = '';\n  messageInput.value = '';\n  console.log(feedbackFormState);\n};\n\n//* Save form input values to local storage using lodash throttle\nconst throttledSaveToLocalStorage = throttle(saveToLocalStorage, 500);\n\n// Add event listener to form inputs\nform.addEventListener('input', () => {\n  throttledSaveToLocalStorage();\n});\n\n// Update form fields with values from local storage on page load\nwindow.addEventListener('load', () => {\n  updateFormFields();\n});\n\n// Prevent default form submit behavior and clear form and local storage\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  clearFormAndLocalStorage();\n});\n"],"names":["$945622fd0f572e60$var$form","document","querySelector","$945622fd0f572e60$var$emailInput","$945622fd0f572e60$var$messageInput","$945622fd0f572e60$var$throttledSaveToLocalStorage","throttle","feedbackFormState","email","value","message","localStorage","setItem","JSON","stringify","addEventListener","window","parse","getItem","$945622fd0f572e60$var$updateFormFields","event","preventDefault","removeItem","console","log"],"version":3,"file":"03-feedback.eb066371.js.map"}